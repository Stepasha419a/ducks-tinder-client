name: continuous-integration

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install:webpack --frozen-lockfile
      - name: Run lint
        run: pnpm nx:lint
      - name: Run prettier
        run: pnpm nx:prettier

  build:
    runs-on: ubuntu-latest
    environment: production
    needs: check

    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install:webpack --frozen-lockfile
      - name: Run build
        run: pnpm nx:build
      - name: Upload build packages artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-build-artifacts
          path: |
            packages/config/dist
            packages/common/dist
            packages/ui/dist
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ducks-tinder-client-demo:latest .
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ducks-tinder-client-demo:latest

  publish-packages:
    runs-on: ubuntu-latest
    environment: production
    needs: build

    steps:
      - uses: actions/checkout@v4
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages-build-artifacts
          path: packages
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: pnpm install:webpack --frozen-lockfile
      - name: Publish packages
        run: pnpm publish-packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
